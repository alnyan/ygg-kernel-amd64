AMD64 Memory Docs
=================

Physical memory
---------------

    Static:

    $MEM_ZERO               $MEM_END_IMAGE
    0x0000'0000'0000'0000 - 0x0000'0000'0040'0000               | Bootloader and kernel load address
        Bootloader is at 0x100000
        Kernel is loaded by the bootloader at 0x200000, some modules may reside below

    Configurable:

                            $MEM_END_POOL [align_up(4K)]
    $MEM_END_IMAGE        - $MEM_END_IMAGE + MM_POOL_SIZE       | Paging structure (dir/pml4/tab/etc) pool
        Consists of 4K pages, allowing to allocate up to (MM_POOL_SIZE / 4096) - (MM_POOL_SIZE / 4096 / 8)
            entries.

                            $MEM_END_HEAP
    $MEM_END_POOL         - $MEM_END_POOL + MM_KERNEL_HEAP_SIZE | Kernel base heap
        The first heap of the kernel, possibly then extended by any of the pages available

                            $MEM_END
    $MEM_END_HEAP         - 0xFFFF'FFFF'FFFF'FFFF               | The rest of the physical memory,
        Available for allocation

    Dynamic:

    * Kernel heap extensions
    * Program images and heaps


Virtual mappings
----------------

1. Kernel space
,,,,,,,,,,,,,,,

    Static:

    0xFFFF'FF00'0000'0000 - 0xFFFF'FF80'0000'0000               | Upper mapping of 0 address (512GiB)
                          V                                     | for easier kernel access to its
    0x0000'0000'0000'0000 - 0x0000'0080'0000'0000               | allocated structures.
        Additionally, after loading the kernel, the bootloader jumps to 0xFFFF'...., which is actually
            the kernel entry point in higher address space.

    0x0000'7FFF'FFFF'F000 - 0x0000'8000'0000'0000
                          V
                         HPET

2. User space
,,,,,,,,,,,,,

    TBD
